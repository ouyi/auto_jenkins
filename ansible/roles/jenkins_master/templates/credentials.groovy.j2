#!/usr/bin/env groovy

import com.cloudbees.plugins.credentials.impl.*;
import com.cloudbees.plugins.credentials.*;
import com.cloudbees.plugins.credentials.domains.*;
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*

def privateKey = new BasicSSHUserPrivateKey(
    CredentialsScope.GLOBAL,
    "{{ pk_cred.id }}",
    "{{ pk_cred.user }}",
    new BasicSSHUserPrivateKey.UsersPrivateKeySource(),
    null,
    "{{ pk_cred.desc }}"
)
// As alternative to the UsersPrivateKeySource, the private key file can also be specified explicitly with:
//    new BasicSSHUserPrivateKey.FileOnMasterPrivateKeySource("/var/jenkins_home/.ssh/id_rsa"),

SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), privateKey)

/*
// As alternative to private key credentials, username and password credentials can be created as follows:
def env = System.getenv()
def user = env['SSH_USER']
def pass = env['SSH_PASS']

def userPassCredential = new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL, "ssh_cred_id", "ssh_cred_desc", user, pass)
SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), userPassCredential)
*/
